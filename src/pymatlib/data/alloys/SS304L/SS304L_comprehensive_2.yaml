name: SS304L_Comprehensive


material_type: alloy  # or pure_metal

composition:
  Fe: 0.675
  Cr: 0.170
  Ni: 0.120
  Mo: 0.025
  Mn: 0.010
  # pure metal
  heat_capacity: 520 if T < melting_temperature else 650
    temperature: melting_temperature
    values: [520, 650]

  latent_heat_of_fusion:
    temperature: melting_temperature
    values: [0, 171401.]
#--> alloys
# composition at least two elements!
# interval for melting
solidus_temperature: 1605.
liquidus_temperature: 1735.
# interval for evaporation
liquidus_boiling_temperature: 6520.
vapor_boiling_temperature: 6850.


#--> pure metals
composition:
  Cu  0.9992
  O   0.0005
  P   0.0001
  Fe  0.0002
melting_temperature: 1655
boiling_temperature: 6000
solidus_temperature: 1605.
liquidus_temperature: 1735.

# temperature_range: [300, 3000, 541]  # 541 (int) -> points
#OR
temperature_range: [300, 3000, 5.0]  # 5.0 (float) -> increment

properties:

  latent_heat_of_fusion:  # KEY_VAL
    key: [solidus_temperature, liquidus_temperature]
    val: [0, 171401.]
    bounds: [constant, extrapolate]
    regression:
      simplify: pre
      degree: 1
      segments: 1

  ##################################################

  latent_heat_of_vaporization: 171401.  # CONSTANT -> KEY_VAL  # TODO:

  ##################################################

  boiling_temperature: 2000.  # overwrites the internally computed boiling temperature  # CONSTANT

  ##################################################

  heat_conductivity:  # PIECEWISE_EQUATION
    temperature:    [500, 1700, 3000]
    equation:       [0.0124137215440647*T + 13.0532171803243, 0.0124137215440647*T + 13.0532171803243]  # for partially defined equations
    bounds:         [extrapolate, extrapolate]
    regression:
      simplify: post
      degree: 1
      segments: 2

  ##################################################

  specific_enthalpy: Integral(heat_capacity, T)  # COMPUTE
  # OR
  kinematic_viscosity:  # COMPUTE TODO: specific_enthalpy renamed to kinematic_viscosity for testing
    equation: Integral(heat_capacity, T)
    bounds: [ constant, extrapolate ]
    regression:
      simplify: post
      degree: 1
      segments: 2

  ##################################################

  energy_density:  # COMPUTE
    equation: density * specific_enthalpy
    bounds: [ constant, constant ]

  ##################################################

  heat_capacity:  # FILE
    file: ./304L_Erstarrungsdaten_edited.xlsx
    temp_col: T (K)  # TODO: change to temp_header
    prop_col: Specific heat (J/(Kg K))
    bounds: [extrapolate, extrapolate]
    regression:
      simplify: post  # TODO: 'post' causes errors: <lambdifygenerated-8>:2: RuntimeWarning: divide by zero encountered in reciprocal
      degree: 1
      segments: 4

  ##################################################

  thermal_diffusivity:  # COMPUTE
    equation: heat_conductivity /(density * heat_capacity)
    bounds: [ constant, extrapolate ]
    regression:
      simplify: post
      degree: 1
      segments: 3

  ##################################################

  density: 6594.65 * ((1 + thermal_expansion_coefficient * (T - 2270)) ** (-3))  # COMPUTE
  # OR
  dynamic_viscosity:  # COMPUTE TODO: density renamed to dynamic_viscosity for testing
    equation: 6594.65 * (1 + thermal_expansion_coefficient * (T - 2270)) ** (-3)
    bounds: [ constant, extrapolate ]
    regression:
      simplify: pre
      degree: 1
      segments: 3
  # OR
  surface_tension:  # TODO: density renamed to surface_tension for testing  # FILE
    file: ./304L_Erstarrungsdaten_edited.xlsx
    temp_col:  T (K)
    prop_col: Density (kg/(m)^3)
    bounds: [constant, extrapolate]
    regression:
      simplify: post
      degree: 2
      segments: 4

  ##################################################

  thermal_expansion_coefficient:  # KEY_VAL
    key: [300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1500, 2000, 2500, 3000]  # TODO; temperature
    val: [1.2632e-5, 1.468e-5, 1.524e-5, 1.581e-5, 1.639e-5, 1.699e-5, 1.759e-5, 1.821e-5, 1.885e-5, 2.1e-5, 2.3e-5, 2.5e-5, 2.7e-5]
    bounds: [constant, extrapolate]
    regression:
      simplify: pre
      degree: 1
      segments: 3
