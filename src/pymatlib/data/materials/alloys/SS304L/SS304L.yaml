# ====================================================================================================
# PYMATLIB MATERIAL CONFIGURATION FILE
# ====================================================================================================
# This file defines material properties for Stainless Steel 304L using the new pymatlib format.
# Pymatlib supports 6 property types: CONSTANT, STEP_FUNCTION, FILE, KEY_VAL, PIECEWISE_EQUATION, and COMPUTE
#
# IMPORTANT: All property configurations must include 'bounds' parameter (except CONSTANT properties)
# ====================================================================================================

name: Stainless Steel 304L
material_type: alloy  # Must be 'alloy' or 'pure_metal'

# Composition fractions must sum to 1.0
composition:
  Fe: 0.675
  Cr: 0.170
  Ni: 0.120
  Mo: 0.025
  Mn: 0.01

# Required temperature properties for alloys
solidus_temperature: 1605.          # Temperature where melting begins (K)
liquidus_temperature: 1735.         # Temperature where material is completely melted (K)
initial_boiling_temperature: 3090.  # Temperature where boiling begins (K)
final_boiling_temperature: 3200.    # Temperature where material is completely vaporized (K)

properties:

  # ====================================================================================================
  # PROPERTY TYPE 1: CONSTANT
  # Format: property_name: numeric_value
  # Note: Must be float, not integer (use 1.0 instead of 1)
  # ====================================================================================================

  latent_heat_of_vaporization: 1.71401E5  # J/kg - Scientific notation supported

  # ====================================================================================================
  # PROPERTY TYPE 2: STEP_FUNCTION
  # Format: Uses 'temperature' (single reference) and 'value' (list of 2 values)
  # Supports temperature references and arithmetic expressions
  # ====================================================================================================

  # Example with temperature reference arithmetic:
  # latent_heat_of_fusion:
  #   temperature: solidus_temperature - 1 # Arithmetic expressions supported
  #   value: [0.0, 171401.0]               # [before_transition, after_transition]
  #   bounds: [constant, constant]         # Required for all non-constant properties

  # ====================================================================================================
  # PROPERTY TYPE 3: KEY_VAL
  # Format: Uses 'temperature' (list/tuple) and 'value' (list) with same length
  # Supports temperature references, explicit lists, and tuple notation
  # ====================================================================================================

  latent_heat_of_fusion:
    temperature: [solidus_temperature - 1, liquidus_temperature + 1]  # Temperature references with arithmetic
    value: [0, 171401.]                    # Corresponding property values
    bounds: [constant, constant]           # Boundary behavior: 'constant' or 'extrapolate'

  thermal_expansion_coefficient:
    temperature: [300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1500, 2000, 2500, 3000]
    value: [1.2632e-5, 1.468e-5, 1.524e-5, 1.581e-5, 1.639e-5, 1.699e-5, 1.759e-5, 1.821e-5, 1.885e-5, 2.1e-5, 2.3e-5, 2.5e-5, 2.7e-5]
    bounds: [constant, constant]
    regression:                            # Optional regression configuration
      simplify: pre                        # 'pre' (before processing) or 'post' (after processing)
      degree: 1                            # Polynomial degree for regression
      segments: 2                          # Number of piecewise segments

  # ====================================================================================================
  # PROPERTY TYPE 4: FILE
  # Format: Uses 'file_path', 'temperature_header', 'value_header'
  # Supports .txt, .csv, .xlsx files with automatic missing value handling
  # ====================================================================================================

  heat_capacity:
    file_path: ./SS304L.xlsx               # Relative path from YAML file location
    temperature_header: T (K)              # Column name for temperature data
    value_header: Specific heat (J/(Kg K)) # Column name for property data
    bounds: [constant, constant]           # Required boundary behavior
    regression:                            # Optional regression for data simplification
      simplify: pre                        # Apply regression before processing
      degree: 1                            # Linear regression
      segments: 4                          # Divide into 4 piecewise segments

  density:
    file_path: ./SS304L.xlsx
    temperature_header: T (K)
    value_header: Density (kg/(m)^3)
    bounds: [constant, constant]
    regression:
      simplify: post                       # Apply regression after processing
      degree: 2
      segments: 3

  # ====================================================================================================
  # PROPERTY TYPE 5: PIECEWISE_EQUATION
  # Format: Uses 'temperature' (breakpoints) and 'equation' (list of expressions)
  # Number of equations = number of breakpoints - 1
  # ====================================================================================================

  heat_conductivity:
    temperature: [500, 1700, 3000]         # Temperature breakpoints (K)
    equation: [0.0124137215440647*T + 13.0532171803243, 0.0124137215440647*T + 13.0532171803243]
    # Two equations for three breakpoints: [500-1700K] and [1700-3000K]
    bounds: [constant, constant]           # Boundary behavior outside range
    regression:
      simplify: post                       # Apply regression after symbolic processing
      degree: 1
      segments: 2

  # ====================================================================================================
  # PROPERTY TYPE 6: COMPUTE
  # Format: Uses 'equation' (single expression) and 'temperature' (range definition)
  # Supports dependency resolution and automatic ordering
  # ====================================================================================================

  specific_enthalpy:
    temperature: (300, 3000, 541)          # (start, stop, num_points) - 541 evenly spaced points
    equation: Integral(heat_capacity, T)   # Symbolic integration
    bounds: [constant, constant]
    regression:
      simplify: post
      degree: 1
      segments: 2

  energy_density:
    temperature: (300, 3000, 5.0)          # (start, stop, step) - 5K increments
    equation: density * specific_enthalpy  # Property dependencies automatically resolved
    bounds: [extrapolate, extrapolate]
    regression:
      simplify: pre
      degree: 1
      segments: 6

  thermal_diffusivity:
    temperature: (3000, 300, -5.0)         # (start, stop, negative_step) - decreasing temperature
    equation: heat_conductivity /(density * heat_capacity)  # Multi-property dependency
    bounds: [constant, constant]
    regression:
      simplify: post
      degree: 1
      segments: 3

# ====================================================================================================
# TEMPERATURE DEFINITION FORMATS:
#
# 1. Single value: 1000.0
# 2. List: [300, 400, 500, 600]
# 3. Temperature references: solidus_temperature, liquidus_temperature, etc.
# 4. Arithmetic expressions: melting_temperature + 50, solidus_temperature - 10
# 5. Tuple formats:
#    - (start, increment): (300, 50) with n_values parameter
#    - (start, stop, step): (300, 1000, 10.0) for 10K increments
#    - (start, stop, points): (300, 1000, 71) for 71 evenly spaced points
#
# BOUNDS OPTIONS:
# - 'constant': Use boundary values as constants outside range
# - 'extrapolate': Linear extrapolation outside range
#
# REGRESSION OPTIONS:
# - simplify: 'pre' (before symbolic processing) or 'post' (after symbolic processing)
# - degree: Polynomial degree (1=linear, 2=quadratic, etc.)
# - segments: Number of piecewise segments for regression
# ====================================================================================================
